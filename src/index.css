/* VARIABLES */
:root {
  --code-background: #212321;
  
  --info-color: #242688;
  --success-color: #146816;
  --success-color-light: #8cfa8c;
  --danger-color: #aa2250;
  --danger-color-light: #dd99cb;
  --grey-color: #aaa;


  --dark-font: #111;
  --light-font: #fef;
  --grey-font: #555;
}

/* BASIC RESET */
*,*::before, *::after {
    margin: 0;
    padding: 0;
    border: 0;
    box-sizing: border-box;
    font-family: Arial, sans-serif;
}
/* GENERAL BUTTON PROPS */
.btn {
    background: none;
    margin: 0;
    padding: 0.5rem 1rem;
    cursor: pointer;
    text-align: center;
    width: 100%;
}

.btn:disabled {
  background-color: var(--grey-color);
  color: var(--grey-font);
  cursor: not-allowed;
}

h2 {
  margin-bottom: 1rem;
}

/* PAGE LAYOUT */
.main-container {
    display: flex;
    flex-flow: column nowrap;
    padding: 1rem 0;
    height: 100vh;
    max-width: 768px;
    margin: auto;
    /* get rid of h/v scrollbars in mobile */
    overflow: hidden;
}

header {
  text-align: center;
}

.panel {
  display: flex;
  flex-flow: column nowrap;
  flex-grow: 1;
  margin: 1rem 0;
}
.panel.inverse {
  flex-flow: column-reverse nowrap;
}

.panel.stretch {
  /* mantain 1rem space to bottom (convert button disappear) */
  margin-bottom: 0;
}

/* header */
.toggler-btn {
  border: 1px solid var(--dark-font);
  color: var(--dark-font);
  border-radius: 15px;
}

/* header options */
.header-options {
  display: flex;
  flex-flow: row nowrap;
}

.header-options button{
  border: 3px double  var(--dark-font);
  padding: 0.5rem 0.2rem;
  color: var(--dark-font);
  font: 500 italic 1rem Verdana, Arial, sans-serif;
}

.splitters {
  flex-basis: 100%;
  flex-grow: 1;
  min-width: max-content;
}
/* PANEL ELEMENTS */

/* code area(s) */
.split-area, .area-wrapper {
  display: flex;
  flex-flow: column nowrap;
  flex-grow: 1;
}

.split-area.h {
  flex-flow: row nowrap;
}

.code-area {
  resize: none;
  flex-grow: 1;
  background-color: var(--code-background);
  color: #efe;
  padding: 1rem;
  font-family: monospace;
}

.close-area {  
  display: flex;
  justify-content: center;

  border: 1px solid var(--light-font);
  padding: 0.5rem;

  background-color: var(--danger-color);
  color: var(--light-font);
  cursor: pointer;
}

.metadata {
  padding: 0.5rem;
  border-left: 1px solid var(--code-background);
  border-right: 1px solid var(--code-background);
  background-color: var(--grey-color);
  color: var(--dark-font);
}
.inverse .metadata {
  order: -1;
}
/* html entities  */
.close-area span,
.toggler-btn span,
.header-options button span{
  font-size: 1.1rem;
  margin: 0 0.2rem;
}

/* additional code-area props */
.h .code-area:nth-child(2) {
  border-left: 1px solid white;
}

.area-wrapper:nth-child(2) .close-area {  
  background-color: var(--code-background);
  color: var(--light-font);
  border: 1px solid var(--light-font);
}

/* custom load button - supershabam [CODERWALL] */
.load-input {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    /* make button of default input big enough so cursor stick to pointer */
    font-size: 25rem;
    opacity: 0;
    cursor: pointer;
}


.load-btn {
  background-color: var(--success-color);

  position: relative;
  overflow: hidden;
  width: 100%;
}

.load-btn.disabled {
  background-color: var(--grey-color);
  color: var(--grey-font);
  cursor: not-allowed;
}

.disabled .load-input {
  pointer-events: none;
}

.load-btn, .save-btn, .convert-btn {
  display: block;
  padding-top: 0.5rem;
  color: var(--light-font);
}

.save-btn {
  display: none;
  background-color: var(--success-color)
}

.beauty-btn {
  display: block;
  border: 1px solid var(--info-color);
  color: var(--info-color);
}

.convert-btn {
  background-color: var(--info-color);
}

/* PANEL ELEMENTS LOGIC 
When inverse is not applied:
 - load and beautify buttons are visible
 - save is not
When inverse is applied:
- load and beautify buttons are hidden
- save button is visible
*/

.inverse > .load-btn,
.inverse > .beauty-btn {
  display: none;
}

.inverse > .save-btn {
  display: block;
  /* appear after metadata input */
  order: -2
}

/* GENERAL */
.hidden {
  display: none;
}
/* NOTIFICATION */
.notification {
  position: absolute;
  margin: auto;
  width: 80vw;
  max-width: 600px;
  max-height: 80vh;
  overflow: auto;
  top: -100%;
  left: 0;
  right: 0;
  z-index: 100;

  padding: 1rem;
  border-radius: 15px;

  font-size: 0.9rem;
  text-align: center;
  color: var(--dark-font);
}

.notification-btn {
  position: absolute;
  right: 10px;
  top: 10px;
  width: 30px;
  height: 30px;
  padding: 0;
  font-size: 1.6rem;
  font-weight: 600;
}

.error {
  border: 2px solid var(--danger-color);
  background-color: var(--danger-color-light);
}

.success {
  border: 2px solid var(--success-color);
  background-color: var(--success-color-light);
}

.enter {
  animation: slideIn 0.5s ease-out forwards;
}

.exit {
  animation: slideOut 0.5s ease-in forwards;
}

.tmp {
  opacity: 0;
  top: 10vh;
  animation: fadeInOut 2s ease-in-out forwards;
}

@keyframes fadeInOut {
  0%   {opacity: 0}
  20%  {opacity: 1}
  80%  {opacity: 1}
  100% {opacity: 0}
}

@keyframes slideIn {
  from {top: -100%}
  to {top: 10vh;}
}

@keyframes slideOut {
  from {top: 10vh}
  to {top: -100%}
}